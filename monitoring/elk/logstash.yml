apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: ecommerce-monitoring
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
    xpack.monitoring.elasticsearch.hosts: ["http://elasticsearch:9200"]
  
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
      http {
        port => 8080
        codec => json
      }
    }
    
    filter {
      if [fields][service] {
        mutate {
          add_field => { "service" => "%{[fields][service]}" }
        }
      }
      
      if [message] =~ /^\{.*\}$/ {
        json {
          source => "message"
        }
      }
      
      # Parse timestamp
      if [timestamp] {
        date {
          match => [ "timestamp", "ISO8601" ]
        }
      }
      
      # Add environment info
      mutate {
        add_field => { "environment" => "production" }
        add_field => { "cluster" => "devops-ecommerce" }
      }
      
      # Parse log levels
      if [level] {
        mutate {
          uppercase => [ "level" ]
        }
      }
      
      # Extract request ID for tracing
      if [requestId] {
        mutate {
          add_field => { "trace_id" => "%{requestId}" }
        }
      }
    }
    
    output {
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
        index => "ecommerce-logs-%{+YYYY.MM.dd}"
        template_name => "ecommerce-logs"
        template => "/usr/share/logstash/templates/ecommerce-template.json"
        template_overwrite => true
      }
      
      # Debug output
      stdout {
        codec => rubydebug
      }
    }
  
  ecommerce-template.json: |
    {
      "index_patterns": ["ecommerce-logs-*"],
      "settings": {
        "number_of_shards": 1,
        "number_of_replicas": 1,
        "index.refresh_interval": "5s"
      },
      "mappings": {
        "properties": {
          "@timestamp": { "type": "date" },
          "service": { "type": "keyword" },
          "level": { "type": "keyword" },
          "message": { "type": "text" },
          "trace_id": { "type": "keyword" },
          "user_id": { "type": "keyword" },
          "request_id": { "type": "keyword" },
          "duration": { "type": "float" },
          "status_code": { "type": "integer" },
          "method": { "type": "keyword" },
          "path": { "type": "keyword" },
          "environment": { "type": "keyword" },
          "cluster": { "type": "keyword" }
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: ecommerce-monitoring
  labels:
    app: logstash
spec:
  replicas: 2
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.9.0
        ports:
        - containerPort: 5044
        - containerPort: 8080
        env:
        - name: LS_JAVA_OPTS
          value: "-Xmx1g -Xms1g"
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
        - name: logstash-config
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
        - name: logstash-config
          mountPath: /usr/share/logstash/templates/ecommerce-template.json
          subPath: ecommerce-template.json
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: ecommerce-monitoring
  labels:
    app: logstash
spec:
  selector:
    app: logstash
  ports:
  - port: 5044
    targetPort: 5044
    name: beats
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP
